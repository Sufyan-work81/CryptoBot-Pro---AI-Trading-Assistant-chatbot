# -*- coding: utf-8 -*-
"""CryptoBot Pro - AI Trading Assistant chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/130CHtGEo-Wn1UVL81cWkohkcshnh3zGR
"""

from IPython.display import HTML

html_content = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CryptoBot Pro - AI Trading Assistant</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #ffd700 0%, #ffb347 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container {
            width: 100%;
            max-width: 450px;
            margin: 20px;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            backdrop-filter: blur(10px);
        }

        .header {
            background: linear-gradient(135deg, #ffd700 0%, #ffb347 100%);
            color: #333;
            padding: 20px;
            text-align: center;
            position: relative;
        }

        .header h1 {
            font-size: 24px;
            margin-bottom: 5px;
        }

        .header p {
            opacity: 0.9;
            font-size: 14px;
        }

        .status-indicator {
            position: absolute;
            top: 20px;
            right: 20px;
            width: 12px;
            height: 12px;
            background: #28a745;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        .chat-area {
            height: 400px;
            overflow-y: auto;
            padding: 20px;
            background: #f8f9fa;
        }

        .message {
            margin-bottom: 15px;
            animation: fadeInUp 0.3s;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .bot-message {
            text-align: left;
        }

        .user-message {
            text-align: right;
        }

        .message-content {
            display: inline-block;
            max-width: 80%;
            padding: 12px 16px;
            border-radius: 18px;
            font-size: 14px;
            line-height: 1.4;
        }

        .bot-message .message-content {
            background: white;
            border: 1px solid #e9ecef;
            color: #333;
        }

        .user-message .message-content {
            background: linear-gradient(135deg, #ffd700, #ffb347);
            color: #333;
        }

        .quick-actions {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-top: 10px;
        }

        .quick-btn {
            background: #e9ecef;
            border: none;
            padding: 8px 12px;
            border-radius: 15px;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.2s;
        }

        .quick-btn:hover {
            background: #dee2e6;
            transform: scale(1.05);
        }

        .input-section {
            padding: 20px;
            background: white;
            border-top: 1px solid #eee;
        }

        .input-container {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .message-input {
            flex: 1;
            border: 1px solid #dee2e6;
            border-radius: 25px;
            padding: 12px 20px;
            font-size: 14px;
            outline: none;
            transition: border-color 0.3s;
        }

        .message-input:focus {
            border-color: #ffd700;
        }

        .send-btn {
            background: linear-gradient(135deg, #ffd700, #ffb347);
            color: #333;
            border: none;
            width: 45px;
            height: 45px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s;
        }

        .send-btn:hover {
            transform: scale(1.1);
        }

        .crypto-data {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 10px;
            padding: 10px;
            margin: 10px 0;
            font-size: 12px;
        }

        .price-positive {
            color: #28a745;
        }

        .price-negative {
            color: #dc3545;
        }

        .hidden {
            display: none;
        }

        @media (max-width: 480px) {
            .container {
                margin: 10px;
                max-width: 95%;
            }

            .header h1 {
                font-size: 20px;
            }

            .face-scanner {
                width: 150px;
                height: 120px;
            }
        }

        .authenticated {
            background: linear-gradient(135deg, #28a745, #20c997);
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #ffd700;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="status-indicator"></div>
            <h1>ðŸ¤– CryptoBot Pro</h1>
            <p>Your AI-Powered Trading Assistant</p>
        </div>

        <div class="chat-area" id="chatArea">
            <div class="message bot-message">
                <div class="message-content">
                    Welcome to CryptoBot Pro! ðŸš€ I'm your AI trading assistant.

                    <div class="crypto-data">
                        <strong>ðŸ’° Live Market Prices:</strong><br>
                        BTC: $67,234.50 <span class="price-positive">+2.5%</span><br>
                        ETH: $3,892.10 <span class="price-negative">-1.2%</span><br>
                        ADA: $0.52 <span class="price-positive">+4.8%</span><br>
                        SOL: $178.30 <span class="price-positive">+6.2%</span><br>
                        DOT: $7.85 <span class="price-negative">-0.8%</span>
                    </div>

                    <div class="quick-actions">
                        <button class="quick-btn" onclick="sendMessage('Show portfolio')">ðŸ“Š Portfolio</button>
                        <button class="quick-btn" onclick="sendMessage('Market analysis')">ðŸ“ˆ Analysis</button>
                        <button class="quick-btn" onclick="sendMessage('Trading signals')">ðŸŽ¯ Signals</button>
                        <button class="quick-btn" onclick="sendMessage('News update')">ðŸ“° News</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="input-section" id="inputSection">
            <div class="input-container">
                <input
                    type="text"
                    class="message-input"
                    id="messageInput"
                    placeholder="Ask about crypto, trading, or portfolio..."
                    onkeypress="handleKeyPress(event)"
                >
                <button class="send-btn" onclick="sendMessage()">
                    <span>âž¤</span>
                </button>
            </div>
        </div>
    </div>

    <script>
        let isAuthenticated = true; // Direct access without authentication
        const cryptoPrices = {
            'BTC': { price: 67234.50, change: 2.5 },
            'ETH': { price: 3892.10, change: -1.2 },
            'ADA': { price: 0.52, change: 4.8 },
            'SOL': { price: 178.30, change: 6.2 },
            'DOT': { price: 7.85, change: -0.8 }
        };

        const portfolio = {
            'BTC': { amount: 0.5, value: 33617.25 },
            'ETH': { amount: 2.3, value: 8951.83 },
            'ADA': { amount: 1000, value: 520.00 }
        };

        function sendMessage(message = null) {
            const input = document.getElementById('messageInput');
            const chatArea = document.getElementById('chatArea');

            const userMessage = message || input.value.trim();
            if (!userMessage) return;

            // Add user message
            addMessage(userMessage, 'user');
            input.value = '';

            // Simulate bot response
            setTimeout(() => {
                const response = generateBotResponse(userMessage);
                addMessage(response, 'bot');
            }, 1000);
        }

        function addMessage(text, sender) {
            const chatArea = document.getElementById('chatArea');
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}-message`;

            const contentDiv = document.createElement('div');
            contentDiv.className = 'message-content';
            contentDiv.innerHTML = text;

            messageDiv.appendChild(contentDiv);
            chatArea.appendChild(messageDiv);
            chatArea.scrollTop = chatArea.scrollHeight;
        }

        function generateBotResponse(userMessage) {
            const msg = userMessage.toLowerCase();

            if (msg.includes('portfolio') || msg.includes('balance')) {
                return generatePortfolioResponse();
            } else if (msg.includes('price') || msg.includes('market')) {
                return generatePriceResponse();
            } else if (msg.includes('buy') || msg.includes('sell')) {
                return generateTradeResponse(msg);
            } else if (msg.includes('news') || msg.includes('update')) {
                return generateNewsResponse();
            } else if (msg.includes('signal') || msg.includes('analysis')) {
                return generateSignalResponse();
            } else if (msg.includes('help')) {
                return generateHelpResponse();
            } else {
                return generateGeneralResponse();
            }
        }

        function generatePortfolioResponse() {
            let totalValue = 0;
            let portfolioHtml = 'ðŸ“Š <strong>Your Portfolio:</strong><div class="crypto-data">';

            for (const [symbol, data] of Object.entries(portfolio)) {
                totalValue += data.value;
                portfolioHtml += `${symbol}: ${data.amount} coins = $${data.value.toFixed(2)}<br>`;
            }

            portfolioHtml += `<strong>Total Value: $${totalValue.toFixed(2)}</strong></div>`;

            return portfolioHtml + '<div class="quick-actions">' +
                '<button class="quick-btn" onclick="sendMessage(\'Buy more crypto\')">ðŸ’° Buy</button>' +
                '<button class="quick-btn" onclick="sendMessage(\'Sell crypto\')">ðŸ’¸ Sell</button>' +
                '</div>';
        }

        function generatePriceResponse() {
            let priceHtml = 'ðŸ’° <strong>Live Market Prices (Updated):</strong><div class="crypto-data">';

            for (const [symbol, data] of Object.entries(cryptoPrices)) {
                const changeClass = data.change >= 0 ? 'price-positive' : 'price-negative';
                const changeSymbol = data.change >= 0 ? '+' : '';
                priceHtml += `<strong>${symbol}:</strong> ${data.price.toFixed(2)} <span class="${changeClass}">${changeSymbol}${data.change.toFixed(2)}%</span><br>`;
            }

            priceHtml += '<br><em>ðŸ”„ Prices update every 10 seconds</em></div>';

            priceHtml += '<div class="quick-actions">' +
                '<button class="quick-btn" onclick="sendMessage(\'Buy crypto\')">ðŸ’° Buy</button>' +
                '<button class="quick-btn" onclick="sendMessage(\'Trading signals\')">ðŸ“Š Signals</button>' +
                '<button class="quick-btn" onclick="sendMessage(\'Set price alert\')">ðŸ”” Alerts</button>' +
                '</div>';

            return priceHtml;
        }

        function generateTradeResponse(msg) {
            if (msg.includes('buy')) {
                return 'ðŸ“ˆ <strong>Buy Order Ready!</strong><br>Which cryptocurrency would you like to buy?<div class="quick-actions">' +
                    '<button class="quick-btn" onclick="sendMessage(\'Buy BTC\')">â‚¿ Bitcoin</button>' +
                    '<button class="quick-btn" onclick="sendMessage(\'Buy ETH\')">Îž Ethereum</button>' +
                    '<button class="quick-btn" onclick="sendMessage(\'Buy ADA\')">â‚³ Cardano</button>' +
                    '</div>';
            } else {
                return 'ðŸ“‰ <strong>Sell Order Ready!</strong><br>Select from your holdings:<div class="quick-actions">' +
                    '<button class="quick-btn" onclick="sendMessage(\'Sell BTC\')">â‚¿ Bitcoin</button>' +
                    '<button class="quick-btn" onclick="sendMessage(\'Sell ETH\')">Îž Ethereum</button>' +
                    '<button class="quick-btn" onclick="sendMessage(\'Sell ADA\')">â‚³ Cardano</button>' +
                    '</div>';
            }
        }

        function generateNewsResponse() {
            return 'ðŸ“° <strong>Crypto News Update:</strong><div class="crypto-data">' +
                'â€¢ Bitcoin ETF approval drives institutional adoption<br>' +
                'â€¢ Ethereum 2.0 staking rewards increase to 4.2%<br>' +
                'â€¢ Major exchange announces new DeFi trading pairs<br>' +
                'â€¢ Regulatory clarity expected in Q2 2025' +
                '</div>';
        }

        function generateSignalResponse() {
            return 'ðŸ“Š <strong>Trading Signals:</strong><div class="crypto-data">' +
                'ðŸŸ¢ BTC: Strong Buy (RSI: 35, oversold)<br>' +
                'ðŸŸ¡ ETH: Hold (consolidating around $3,900)<br>' +
                'ðŸŸ¢ SOL: Buy (breaking resistance at $175)<br>' +
                'ðŸ”´ ADA: Weak Sell (bearish divergence)<br>' +
                '<em>Risk Level: Moderate</em>' +
                '</div>';
        }

        function generateHelpResponse() {
            return 'ðŸ¤– <strong>CryptoBot Commands:</strong><br>' +
                'â€¢ "Show portfolio" - View your holdings<br>' +
                'â€¢ "Market prices" - Get current prices<br>' +
                'â€¢ "Buy/Sell [crypto]" - Execute trades<br>' +
                'â€¢ "Trading signals" - Get AI analysis<br>' +
                'â€¢ "News update" - Latest crypto news<br>' +
                '<div class="quick-actions">' +
                '<button class="quick-btn" onclick="sendMessage(\'Market analysis\')">ðŸ“ˆ Analysis</button>' +
                '<button class="quick-btn" onclick="sendMessage(\'Set price alert\')">ðŸ”” Alerts</button>' +
                '</div>';
        }

        function generateGeneralResponse() {
            const responses = [
                'I can help you with crypto trading, portfolio management, and market analysis. What would you like to know?',
                'Ready to assist with your crypto needs! Ask me about prices, trades, or market insights.',
                'Your crypto assistant is here! Try asking about portfolio, prices, or trading signals.',
                'Let me help you navigate the crypto markets! What information do you need?'
            ];
            return responses[Math.floor(Math.random() * responses.length)];
        }

        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                sendMessage();
            }
        }

        // Simulate real-time price updates
        setInterval(() => {
            if (isAuthenticated) {
                for (const symbol in cryptoPrices) {
                    const change = (Math.random() - 0.5) * 2;
                    cryptoPrices[symbol].price += cryptoPrices[symbol].price * (change / 100);
                    cryptoPrices[symbol].change = change;
                }
            }
        }, 10000);
    </script>
</body>
</html>
"""

display(HTML(html_content))